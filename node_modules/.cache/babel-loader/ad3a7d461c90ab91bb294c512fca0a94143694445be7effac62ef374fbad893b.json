{"ast":null,"code":"import React from\"react\";import{useState}from\"react\";export const useFetching=callback=>{const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState('');const fetching=async function(){try{setIsLoading(true);await callback(...arguments);}catch(e){setError(e.message);}finally{setIsLoading(false);}};return[fetching,isLoading,error];};","map":{"version":3,"names":["React","useState","useFetching","callback","isLoading","setIsLoading","error","setError","fetching","arguments","e","message"],"sources":["/workspaces/quick-post/src/hooks/useFetching.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport const useFetching = (callback) =>{\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    const fetching = async (...args) =>{\r\n        try{\r\n            setIsLoading(true)\r\n            await callback(...args)\r\n        } catch(e){\r\n            setError(e.message)\r\n        } finally{\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return [fetching, isLoading, error]\r\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,OAAO,CAEhC,MAAO,MAAM,CAAAC,WAAW,CAAIC,QAAQ,EAAI,CACpC,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGJ,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAO,QAAQ,CAAG,cAAAA,CAAA,CAAkB,CAC/B,GAAG,CACCH,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAF,QAAQ,CAAC,GAAAM,SAAO,CAAC,CAC3B,CAAE,MAAMC,CAAC,CAAC,CACNH,QAAQ,CAACG,CAAC,CAACC,OAAO,CAAC,CACvB,CAAC,OAAQ,CACLN,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAED,MAAO,CAACG,QAAQ,CAAEJ,SAAS,CAAEE,KAAK,CAAC,CACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}