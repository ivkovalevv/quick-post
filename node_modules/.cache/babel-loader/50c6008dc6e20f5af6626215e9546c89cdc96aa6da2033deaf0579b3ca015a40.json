{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nexport const useFetching = callback => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fetching = async (...args) => {\n    try {\n      setIsLoading(true);\n      await callback(...args);\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return [fetching, isLoading, error];\n};\n_s(useFetching, \"AxZxtnUzare8ll1Rk4kFSeA5V2Q=\");","map":{"version":3,"names":["React","useState","useFetching","callback","_s","isLoading","setIsLoading","error","setError","fetching","args","e","message"],"sources":["/workspaces/quick-post/src/hooks/useFetching.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport const useFetching = (callback) =>{\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    const fetching = async (...args) =>{\r\n        try{\r\n            setIsLoading(true)\r\n            await callback(...args)\r\n        } catch(e){\r\n            setError(e.message)\r\n        } finally{\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return [fetching, isLoading, error]\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,WAAW,GAAIC,QAAQ,IAAI;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,QAAQ,GAAG,MAAAA,CAAO,GAAGC,IAAI,KAAI;IAC/B,IAAG;MACCJ,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMH,QAAQ,CAAC,GAAGO,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAMC,CAAC,EAAC;MACNH,QAAQ,CAACG,CAAC,CAACC,OAAO,CAAC;IACvB,CAAC,SAAQ;MACLN,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO,CAACG,QAAQ,EAAEJ,SAAS,EAAEE,KAAK,CAAC;AACvC,CAAC;AAAAH,EAAA,CAhBYF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}