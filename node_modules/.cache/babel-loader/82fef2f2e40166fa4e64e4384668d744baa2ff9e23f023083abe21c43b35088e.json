{"ast":null,"code":"var _jsxFileName = \"/workspaces/quick-post/src/components/PostForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MyButton from \"./UI/button/MyButton\";\nimport MyInput from \"./UI/input/MyInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = ({\n  create\n}) => {\n  _s();\n  const [post, setPost] = useState({\n    title: '',\n    body: ''\n  });\n  const addNewPost = e => {\n    e.preventDefault();\n    const newPost = {\n      ...post,\n      id: Date.now()\n    };\n    create(newPost);\n    setPost({\n      title: '',\n      body: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(MyInput, {\n      value: post.title,\n      onChange: e => setPost({\n        ...post,\n        title: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n      value: post.body,\n      onChange: e => setPost({\n        ...post,\n        body: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: addNewPost,\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(PostForm, \"bmg7/veTUOVnpurxQrmjNj+REHg=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","MyButton","MyInput","jsxDEV","_jsxDEV","PostForm","create","_s","post","setPost","title","body","addNewPost","e","preventDefault","newPost","id","Date","now","children","value","onChange","target","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/workspaces/quick-post/src/components/PostForm.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\nimport MyInput from \"./UI/input/MyInput\";\r\n\r\nconst PostForm = ({create}) => {\r\n    const [post, setPost] = useState({title: '', body: ''})\r\n\r\n    const addNewPost = (e) => {\r\n        e.preventDefault()\r\n    \r\n        const newPost = {\r\n            ...post, id: Date.now()\r\n        }\r\n        create(newPost)\r\n        setPost({title: '', body: ''})\r\n      }\r\n\r\n    return(\r\n        <form>\r\n        {/* Управляемый компонент */}\r\n        <MyInput \r\n          value={post.title}\r\n          onChange={e => setPost({...post, title: e.target.value})}\r\n          type=\"text\" \r\n          placeholder=\"Название поста\">\r\n        </MyInput>\r\n        {/* Неуправляемый компонент */}\r\n        <MyInput\r\n          value={post.body}\r\n          onChange={e => setPost({...post, body: e.target.value})}\r\n          type=\"text\" \r\n          placeholder=\"Описание поста\">\r\n        </MyInput>\r\n        <MyButton onClick={addNewPost}>Создать пост</MyButton>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PostForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAC;EAACC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAACU,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAE,CAAC,CAAC;EAEvD,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,OAAO,GAAG;MACZ,GAAGP,IAAI;MAAEQ,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IAC1B,CAAC;IACDZ,MAAM,CAACS,OAAO,CAAC;IACfN,OAAO,CAAC;MAACC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAC,CAAC;EAChC,CAAC;EAEH,oBACIP,OAAA;IAAAe,QAAA,gBAEAf,OAAA,CAACF,OAAO;MACNkB,KAAK,EAAEZ,IAAI,CAACE,KAAM;MAClBW,QAAQ,EAAER,CAAC,IAAIJ,OAAO,CAAC;QAAC,GAAGD,IAAI;QAAEE,KAAK,EAAEG,CAAC,CAACS,MAAM,CAACF;MAAK,CAAC,CAAE;MACzDG,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eAEVxB,OAAA,CAACF,OAAO;MACNkB,KAAK,EAAEZ,IAAI,CAACG,IAAK;MACjBU,QAAQ,EAAER,CAAC,IAAIJ,OAAO,CAAC;QAAC,GAAGD,IAAI;QAAEG,IAAI,EAAEE,CAAC,CAACS,MAAM,CAACF;MAAK,CAAC,CAAE;MACxDG,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACVxB,OAAA,CAACH,QAAQ;MAAC4B,OAAO,EAAEjB,UAAW;MAAAO,QAAA,EAAC;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEb,CAAC;AAAArB,EAAA,CAhCKF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAkCd,eAAeA,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}